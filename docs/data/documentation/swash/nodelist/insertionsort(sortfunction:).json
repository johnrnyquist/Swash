{"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swash\/nodelist\/insertionsort(sortfunction:)"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/Swash\/documentation\/Swash","doc:\/\/Swash\/documentation\/Swash\/NodeList"]]},"abstract":[{"type":"text","text":"Performs an insertion sort on the node list. In general, insertion sort is very efficient with short lists"},{"type":"text","text":" "},{"text":"and with lists that are mostly sorted, but is inefficient with large lists that are randomly ordered.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The sort function takes two nodes and returns a Number."},{"type":"text","text":" "},{"type":"text","text":"If the returned number is less than zero, the first node should be before the second. If it is greater"},{"text":" ","type":"text"},{"text":"than zero the second node should be before the first. If it is zero the order of the nodes doesn’t matter","type":"text"},{"type":"text","text":" "},{"text":"and the original order will be retained.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This insertion sort implementation runs in place so no objects are created during the sort."}],"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"insertionSort","kind":"identifier"},{"text":"(","kind":"text"},{"text":"sortFunction","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:5Swash4NodeC","kind":"typeIdentifier","text":"Node","identifier":"doc:\/\/Swash\/documentation\/Swash\/Node"},{"kind":"text","text":"?, "},{"kind":"typeIdentifier","preciseIdentifier":"s:5Swash4NodeC","text":"Node","identifier":"doc:\/\/Swash\/documentation\/Swash\/Node"},{"text":"?) -> ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"languages":["swift"]}],"kind":"declarations"}],"metadata":{"externalID":"s:5Swash8NodeListC13insertionSort12sortFunctionySiAA0B0CSg_AHtXE_tF","role":"symbol","symbolKind":"method","modules":[{"name":"Swash"}],"roleHeading":"Instance Method","title":"insertionSort(sortFunction:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"insertionSort"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"sortFunction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:5Swash4NodeC","text":"Node"},{"kind":"text","text":"?, "},{"preciseIdentifier":"s:5Swash4NodeC","text":"Node","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"text":")","kind":"text"}]},"sections":[],"identifier":{"url":"doc:\/\/Swash\/documentation\/Swash\/NodeList\/insertionSort(sortFunction:)","interfaceLanguage":"swift"},"references":{"doc://Swash/documentation/Swash/NodeList/insertionSort(sortFunction:)":{"role":"symbol","url":"\/documentation\/swash\/nodelist\/insertionsort(sortfunction:)","abstract":[{"type":"text","text":"Performs an insertion sort on the node list. In general, insertion sort is very efficient with short lists"},{"type":"text","text":" "},{"text":"and with lists that are mostly sorted, but is inefficient with large lists that are randomly ordered.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The sort function takes two nodes and returns a Number."},{"type":"text","text":" "},{"type":"text","text":"If the returned number is less than zero, the first node should be before the second. If it is greater"},{"text":" ","type":"text"},{"text":"than zero the second node should be before the first. If it is zero the order of the nodes doesn’t matter","type":"text"},{"text":" ","type":"text"},{"text":"and the original order will be retained.","type":"text"},{"text":" ","type":"text"},{"text":"This insertion sort implementation runs in place so no objects are created during the sort.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/Swash\/documentation\/Swash\/NodeList\/insertionSort(sortFunction:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"insertionSort","kind":"identifier"},{"text":"(","kind":"text"},{"text":"sortFunction","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Node","kind":"typeIdentifier","preciseIdentifier":"s:5Swash4NodeC"},{"text":"?, ","kind":"text"},{"preciseIdentifier":"s:5Swash4NodeC","kind":"typeIdentifier","text":"Node"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":")","kind":"text"}],"type":"topic","title":"insertionSort(sortFunction:)"},"doc://Swash/documentation/Swash":{"type":"topic","abstract":[],"role":"collection","identifier":"doc:\/\/Swash\/documentation\/Swash","url":"\/documentation\/swash","title":"Swash","kind":"symbol"},"doc://Swash/documentation/Swash/Node":{"navigatorTitle":[{"kind":"identifier","text":"Node"}],"abstract":[{"text":"The base class for a node.","type":"text"},{"type":"text","text":" "},{"text":"A node is a set of different components that are required by a system.","type":"text"},{"type":"text","text":" "},{"text":"A system can request a collection of nodes from the engine. Subsequently the Engine object creates","type":"text"},{"type":"text","text":" "},{"text":"a node for every entity that has all of the components in the node class and adds these nodes","type":"text"},{"type":"text","text":" "},{"text":"to the list obtained by the system. The engine keeps the list up to date as entities are added","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to and removed from the engine and as the components on entities change."}],"title":"Node","type":"topic","kind":"symbol","identifier":"doc:\/\/Swash\/documentation\/Swash\/Node","url":"\/documentation\/swash\/node","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Node"}],"role":"symbol"},"doc://Swash/documentation/Swash/NodeList":{"url":"\/documentation\/swash\/nodelist","kind":"symbol","identifier":"doc:\/\/Swash\/documentation\/Swash\/NodeList","abstract":[{"text":"A collection of nodes.","type":"text"},{"text":" ","type":"text"},{"text":"Systems within the engine access the components of entities via NodeLists. A NodeList contains","type":"text"},{"type":"text","text":" "},{"type":"text","text":"a node for each Entity in the engine that has all the components required by the node. To iterate"},{"type":"text","text":" "},{"text":"over a NodeList, start from the head and step to the next on each loop, until the returned value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"is null."}],"navigatorTitle":[{"kind":"identifier","text":"NodeList"}],"role":"symbol","title":"NodeList","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NodeList"}]}}}